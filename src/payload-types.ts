/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
  collections: {
    users: User;
    pages: Page;
    media: Media;
    portfolio: Portfolio;
    categories: Category;
    product: Product;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  globals: {
    'site-logo': SiteLogo;
    'site-favicon': SiteFavicon;
  };
}
export interface User {
  id: number;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password: string | null;
}
export interface Page {
  id: number;
  title: string;
  hero: {
    type: 'none' | 'highImpact' | 'mediumImpact';
    title: string;
    richText?:
      | {
          [k: string]: unknown;
        }[]
      | null;
    links?:
      | {
          link: {
            type?: ('reference' | 'custom') | null;
            icon?: boolean | null;
            newTab?: boolean | null;
            reference?: {
              relationTo: 'pages';
              value: number | Page;
            } | null;
            url?: string | null;
            label: string;
            appearance?: ('default' | 'primary' | 'secondary') | null;
          };
          id?: string | null;
        }[]
      | null;
    media?: number | Media | null;
  };
  layout: (
    | {
        richText: {
          [k: string]: unknown;
        }[];
        links?:
          | {
              link: {
                type?: ('reference' | 'custom') | null;
                icon?: boolean | null;
                newTab?: boolean | null;
                reference?: {
                  relationTo: 'pages';
                  value: number | Page;
                } | null;
                url?: string | null;
                label: string;
                appearance?: ('primary' | 'secondary') | null;
              };
              id?: string | null;
            }[]
          | null;
        media: number | Media;
        id?: string | null;
        blockName?: string | null;
        blockType: 'cta';
      }
    | {
        content?:
          | (
              | {
                  media?: number | Media | null;
                  enableAdditionalImages?: boolean | null;
                  additionalImages?:
                    | {
                        position?: ('topLeft' | 'topRight' | 'bottomLeft' | 'bottomRight') | null;
                        additionalImage?: number | Media | null;
                        id?: string | null;
                      }[]
                    | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'mediaBlock';
                }
              | {
                  richText: {
                    [k: string]: unknown;
                  }[];
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'textBlock';
                }
            )[]
          | null;
        isHalfWidth?: boolean | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'content';
      }
    | {
        title?: string | null;
        categories?: (number | Category)[] | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'offerSection';
      }
  )[];
  slug?: string | null;
  meta?: {
    title?: string | null;
    description?: string | null;
    image?: number | Media | null;
  };
  updatedAt: string;
  createdAt: string;
}
export interface Media {
  id: number;
  alt?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    card?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    tablet?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
export interface Category {
  id: number;
  title: string;
  slug?: string | null;
  media: number | Media;
  layout: (
    | {
        richText: {
          [k: string]: unknown;
        }[];
        links?:
          | {
              link: {
                type?: ('reference' | 'custom') | null;
                icon?: boolean | null;
                newTab?: boolean | null;
                reference?: {
                  relationTo: 'pages';
                  value: number | Page;
                } | null;
                url?: string | null;
                label: string;
                appearance?: ('primary' | 'secondary') | null;
              };
              id?: string | null;
            }[]
          | null;
        media: number | Media;
        id?: string | null;
        blockName?: string | null;
        blockType: 'cta';
      }
    | {
        content?:
          | (
              | {
                  media?: number | Media | null;
                  enableAdditionalImages?: boolean | null;
                  additionalImages?:
                    | {
                        position?: ('topLeft' | 'topRight' | 'bottomLeft' | 'bottomRight') | null;
                        additionalImage?: number | Media | null;
                        id?: string | null;
                      }[]
                    | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'mediaBlock';
                }
              | {
                  richText: {
                    [k: string]: unknown;
                  }[];
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'textBlock';
                }
            )[]
          | null;
        isHalfWidth?: boolean | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'content';
      }
    | {
        title?: string | null;
        categories?: (number | Category)[] | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'offerSection';
      }
  )[];
  parentCategory?: (number | null) | Category;
  categoryThumbnail?: number | Media | null;
  updatedAt: string;
  createdAt: string;
}
export interface Portfolio {
  id: number;
  title?: string | null;
  description: {
    [k: string]: unknown;
  }[];
  media: number | Media;
  updatedAt: string;
  createdAt: string;
}
export interface Product {
  id: number;
  title: string;
  slug?: string | null;
  productDetailsJSON?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  media: number | Media;
  layout: (
    | {
        richText: {
          [k: string]: unknown;
        }[];
        links?:
          | {
              link: {
                type?: ('reference' | 'custom') | null;
                icon?: boolean | null;
                newTab?: boolean | null;
                reference?: {
                  relationTo: 'pages';
                  value: number | Page;
                } | null;
                url?: string | null;
                label: string;
                appearance?: ('primary' | 'secondary') | null;
              };
              id?: string | null;
            }[]
          | null;
        media: number | Media;
        id?: string | null;
        blockName?: string | null;
        blockType: 'cta';
      }
    | {
        content?:
          | (
              | {
                  media?: number | Media | null;
                  enableAdditionalImages?: boolean | null;
                  additionalImages?:
                    | {
                        position?: ('topLeft' | 'topRight' | 'bottomLeft' | 'bottomRight') | null;
                        additionalImage?: number | Media | null;
                        id?: string | null;
                      }[]
                    | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'mediaBlock';
                }
              | {
                  richText: {
                    [k: string]: unknown;
                  }[];
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'textBlock';
                }
            )[]
          | null;
        isHalfWidth?: boolean | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'content';
      }
    | {
        title?: string | null;
        categories?: (number | Category)[] | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'offerSection';
      }
  )[];
  category?: (number | null) | Category;
  updatedAt: string;
  createdAt: string;
}
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
export interface SiteLogo {
  id: number;
  logo: number | Media;
  updatedAt?: string | null;
  createdAt?: string | null;
}
export interface SiteFavicon {
  id: number;
  favicon: number | Media;
  updatedAt?: string | null;
  createdAt?: string | null;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}